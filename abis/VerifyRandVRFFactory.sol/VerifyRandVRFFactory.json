{"abi":[{"type":"function","name":"createProxy","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"verifyRandAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"event","name":"ProxyCreated","inputs":[{"name":"mintProxyAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"FailedDeployment","inputs":[]},{"type":"error","name":"InsufficientBalance","inputs":[{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"0x6080806040523461001657610198908161001b8239f35b5f80fdfe60806040908082526004361015610014575f80fd5b5f91823560e01c6325b5672714610029575f80fd5b3461015e578060031936011261015e576004356001600160a01b03808216820361015a57602435918183168093036101565780763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff6e5af43d82803e903d91602b57fd5bf39360881c1617875260781b176020526037600986f0169283156101475750823b156101435781519063485cc95560e01b82523360048301526024820152838160448183875af180156101395761010a575b602083837efffc2da0b561cae30d9826d37709e9421c4725faebc226cbbb7ef5fc5e7349838251848152a151908152f35b67ffffffffffffffff8111610125576020935081525f6100d9565b634e487b7160e01b84526041600452602484fd5b82513d86823e3d90fd5b8380fd5b63b06ebf3d60e01b8152600490fd5b8580fd5b8480fd5b8280fdfea264697066735822122024b6d8f6b176082bf5d95a5dd7021f57ae2ef7b7acb6c015613d72bc8d7a692f64736f6c63430008140033","sourceMap":"500:1471:27:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040908082526004361015610014575f80fd5b5f91823560e01c6325b5672714610029575f80fd5b3461015e578060031936011261015e576004356001600160a01b03808216820361015a57602435918183168093036101565780763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff6e5af43d82803e903d91602b57fd5bf39360881c1617875260781b176020526037600986f0169283156101475750823b156101435781519063485cc95560e01b82523360048301526024820152838160448183875af180156101395761010a575b602083837efffc2da0b561cae30d9826d37709e9421c4725faebc226cbbb7ef5fc5e7349838251848152a151908152f35b67ffffffffffffffff8111610125576020935081525f6100d9565b634e487b7160e01b84526041600452602484fd5b82513d86823e3d90fd5b8380fd5b63b06ebf3d60e01b8152600490fd5b8580fd5b8480fd5b8280fdfea264697066735822122024b6d8f6b176082bf5d95a5dd7021f57ae2ef7b7acb6c015613d72bc8d7a692f64736f6c63430008140033","sourceMap":"500:1471:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;500:1471:27;;;;;;;;;;;;;;;;;;1818:578:22;;;;;;;;;;;;;;500:1471:27;1818:578:22;;;;;500:1471:27;2409:22:22;;;2405:85;;1666:73:27;;;;;;500:1471;;;;;;1666:73;;1709:10;500:1471;1666:73;;500:1471;;;;;1666:73;;500:1471;1666:73;;;;;;;;;;;500:1471;;;;1832:30;500:1471;;;;;;1832:30;500:1471;;;;;1666:73;500:1471;;;;;;;;;;1666:73;;;500:1471;-1:-1:-1;;;500:1471:27;;;;;;;;1666:73;500:1471;;;;;;;;;1666:73;500:1471;;;2405:85:22;-1:-1:-1;;;2454:25:22;;500:1471:27;;2454:25:22;500:1471:27;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"createProxy(address,address)":"25b56727"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mintProxyAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"verifyRandAddress\",\"type\":\"address\"}],\"name\":\"createProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract for creating clones (proxy contracts) of the VerifyRandVRF contract. This factory contract enables the deployment of proxy contracts with the VerifyRandVRF implementation.\",\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"events\":{\"ProxyCreated(address)\":{\"details\":\"Emitted when a new proxy contract is created.\",\"params\":{\"mintProxyAddress\":\"The address of the newly created proxy contract.\"}}},\"kind\":\"dev\",\"methods\":{\"createProxy(address,address)\":{\"details\":\"Creates a proxy contract for the VerifyRandVRF contract. The proxy contract is initialized with the sender address and a verifyRand address.\",\"params\":{\"implementation\":\"The address of the VerifyRandVRF implementation contract.\",\"verifyRandAddress\":\"The address of the verifyRand contract for fulfilling random words.\"},\"returns\":{\"_0\":\"mintProxyAddress The address of the newly created proxy contract.\"}}},\"title\":\"VerifyRandVRFFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/VerifyRandVRFFactory.sol\":\"VerifyRandVRFFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x83b10b9c4f3117f1bff30c49bc486d719de88c8425fe646bc8a5f998ee44ceb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef2774d5513d7567c3e886a875d90261e1173876324e88e5f21ce79cad14e188\",\"dweb:/ipfs/QmRDkvYwjyHCyTahZ5BqaRz64VtxSzGiYTLmDkacC5yEqr\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"src/VerifyRandVRF.sol\":{\"keccak256\":\"0x5ff6d20dcd8fab12885f2e9977298aafc89d38cc872ff3cd7a469935799ec2d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcfe931ec8e0a4869e88c48d4940ab829e69347c29667d5f1db54414b0fc937f\",\"dweb:/ipfs/QmVY8NUngkJGzrk4bjmUDLvutaf5X1qHSw8UkQw25GeNbo\"]},\"src/VerifyRandVRFFactory.sol\":{\"keccak256\":\"0x6b4614b35e14d9390f808fbcad6f7d327173dba01e9e1a0bacd7a09429b8b078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7bc03dbfe0e901acd6893a2ba0129f2506b7f34e7cc69346eb4e0ef4d254ac1\",\"dweb:/ipfs/QmV5uEKuw8AbxFBWRGRvrgVk42rDvt1MdbH6fZRFD4cXRd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"FailedDeployment"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"type":"error","name":"InsufficientBalance"},{"inputs":[{"internalType":"address","name":"mintProxyAddress","type":"address","indexed":false}],"type":"event","name":"ProxyCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"address","name":"verifyRandAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createProxy","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"createProxy(address,address)":{"details":"Creates a proxy contract for the VerifyRandVRF contract. The proxy contract is initialized with the sender address and a verifyRand address.","params":{"implementation":"The address of the VerifyRandVRF implementation contract.","verifyRandAddress":"The address of the verifyRand contract for fulfilling random words."},"returns":{"_0":"mintProxyAddress The address of the newly created proxy contract."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/VerifyRandVRFFactory.sol":"VerifyRandVRFFactory"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a","urls":["bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6","dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b","urls":["bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609","dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397","urls":["bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9","dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Clones.sol":{"keccak256":"0x83b10b9c4f3117f1bff30c49bc486d719de88c8425fe646bc8a5f998ee44ceb9","urls":["bzz-raw://ef2774d5513d7567c3e886a875d90261e1173876324e88e5f21ce79cad14e188","dweb:/ipfs/QmRDkvYwjyHCyTahZ5BqaRz64VtxSzGiYTLmDkacC5yEqr"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Create2.sol":{"keccak256":"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06","urls":["bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e","dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"],"license":"MIT"},"src/VerifyRandVRF.sol":{"keccak256":"0x5ff6d20dcd8fab12885f2e9977298aafc89d38cc872ff3cd7a469935799ec2d1","urls":["bzz-raw://dcfe931ec8e0a4869e88c48d4940ab829e69347c29667d5f1db54414b0fc937f","dweb:/ipfs/QmVY8NUngkJGzrk4bjmUDLvutaf5X1qHSw8UkQw25GeNbo"],"license":"MIT"},"src/VerifyRandVRFFactory.sol":{"keccak256":"0x6b4614b35e14d9390f808fbcad6f7d327173dba01e9e1a0bacd7a09429b8b078","urls":["bzz-raw://f7bc03dbfe0e901acd6893a2ba0129f2506b7f34e7cc69346eb4e0ef4d254ac1","dweb:/ipfs/QmV5uEKuw8AbxFBWRGRvrgVk42rDvt1MdbH6fZRFD4cXRd"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"src/VerifyRandVRFFactory.sol","id":40397,"exportedSymbols":{"Clones":[39979],"ContextUpgradeable":[39580],"Create2":[40078],"Errors":[40100],"Initializable":[39534],"OwnableUpgradeable":[39280],"VerifyRandVRF":[40352],"VerifyRandVRFFactory":[40396]},"nodeType":"SourceUnit","src":"32:1940:27","nodes":[{"id":40354,"nodeType":"PragmaDirective","src":"32:24:27","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":40355,"nodeType":"ImportDirective","src":"110:50:27","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","nameLocation":"-1:-1:-1","scope":40397,"sourceUnit":39980,"symbolAliases":[],"unitAlias":""},{"id":40356,"nodeType":"ImportDirective","src":"161:29:27","nodes":[],"absolutePath":"src/VerifyRandVRF.sol","file":"./VerifyRandVRF.sol","nameLocation":"-1:-1:-1","scope":40397,"sourceUnit":40353,"symbolAliases":[],"unitAlias":""},{"id":40396,"nodeType":"ContractDefinition","src":"500:1471:27","nodes":[{"id":40362,"nodeType":"EventDefinition","src":"757:45:27","nodes":[],"anonymous":false,"documentation":{"id":40358,"nodeType":"StructuredDocumentation","src":"603:149:27","text":" @dev Emitted when a new proxy contract is created.\n @param mintProxyAddress The address of the newly created proxy contract."},"eventSelector":"00fffc2da0b561cae30d9826d37709e9421c4725faebc226cbbb7ef5fc5e7349","name":"ProxyCreated","nameLocation":"763:12:27","parameters":{"id":40361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40360,"indexed":false,"mutability":"mutable","name":"mintProxyAddress","nameLocation":"784:16:27","nodeType":"VariableDeclaration","scope":40362,"src":"776:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40359,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"775:26:27"}},{"id":40395,"nodeType":"FunctionDefinition","src":"1329:640:27","nodes":[],"body":{"id":40394,"nodeType":"Block","src":"1428:541:27","nodes":[],"statements":[{"assignments":[40373],"declarations":[{"constant":false,"id":40373,"mutability":"mutable","name":"mintProxyAddress","nameLocation":"1513:16:27","nodeType":"VariableDeclaration","scope":40394,"src":"1505:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40372,"name":"address","nodeType":"ElementaryTypeName","src":"1505:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":40378,"initialValue":{"arguments":[{"id":40376,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40365,"src":"1545:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":40374,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39979,"src":"1532:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$39979_$","typeString":"type(library Clones)"}},"id":40375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1539:5:27","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":39603,"src":"1532:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) returns (address)"}},"id":40377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1532:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1505:55:27"},{"expression":{"arguments":[{"expression":{"id":40383,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1709:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":40384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1713:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1709:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":40385,"name":"verifyRandAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40367,"src":"1721:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":40380,"name":"mintProxyAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40373,"src":"1680:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":40379,"name":"VerifyRandVRF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40352,"src":"1666:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VerifyRandVRF_$40352_$","typeString":"type(contract VerifyRandVRF)"}},"id":40381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VerifyRandVRF_$40352","typeString":"contract VerifyRandVRF"}},"id":40382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1698:10:27","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":40247,"src":"1666:42:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) external"}},"id":40386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:73:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":40387,"nodeType":"ExpressionStatement","src":"1666:73:27"},{"eventCall":{"arguments":[{"id":40389,"name":"mintProxyAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40373,"src":"1845:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":40388,"name":"ProxyCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40362,"src":"1832:12:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":40390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1832:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":40391,"nodeType":"EmitStatement","src":"1827:35:27"},{"expression":{"id":40392,"name":"mintProxyAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40373,"src":"1946:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":40371,"id":40393,"nodeType":"Return","src":"1939:23:27"}]},"documentation":{"id":40363,"nodeType":"StructuredDocumentation","src":"885:439:27","text":" @dev Creates a proxy contract for the VerifyRandVRF contract.\n The proxy contract is initialized with the sender address and a verifyRand address.\n @param implementation The address of the VerifyRandVRF implementation contract.\n @param verifyRandAddress The address of the verifyRand contract for fulfilling random words.\n @return mintProxyAddress The address of the newly created proxy contract."},"functionSelector":"25b56727","implemented":true,"kind":"function","modifiers":[],"name":"createProxy","nameLocation":"1338:11:27","parameters":{"id":40368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40365,"mutability":"mutable","name":"implementation","nameLocation":"1358:14:27","nodeType":"VariableDeclaration","scope":40395,"src":"1350:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40364,"name":"address","nodeType":"ElementaryTypeName","src":"1350:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":40367,"mutability":"mutable","name":"verifyRandAddress","nameLocation":"1382:17:27","nodeType":"VariableDeclaration","scope":40395,"src":"1374:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40366,"name":"address","nodeType":"ElementaryTypeName","src":"1374:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1349:51:27"},"returnParameters":{"id":40371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40395,"src":"1419:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40369,"name":"address","nodeType":"ElementaryTypeName","src":"1419:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1418:9:27"},"scope":40396,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VerifyRandVRFFactory","contractDependencies":[],"contractKind":"contract","documentation":{"id":40357,"nodeType":"StructuredDocumentation","src":"267:232:27","text":" @title VerifyRandVRFFactory\n @dev A contract for creating clones (proxy contracts) of the VerifyRandVRF contract.\n This factory contract enables the deployment of proxy contracts with the VerifyRandVRF implementation."},"fullyImplemented":true,"linearizedBaseContracts":[40396],"name":"VerifyRandVRFFactory","nameLocation":"509:20:27","scope":40397,"usedErrors":[40088,40094],"usedEvents":[40362]}],"license":"MIT"},"id":27}
